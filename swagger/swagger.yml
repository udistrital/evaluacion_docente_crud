swagger: "2.0"
info:
  title: beego Test API
  description: beego has a very cool tools to autogenerate documents for your API
  version: 1.0.0
  termsOfService: http://beego.me/
  contact:
    email: astaxie@gmail.com
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
basePath: /v1
paths:
  /campo/:
    get:
      tags:
      - campo
      description: get Campo
      operationId: CampoController.Get All
      parameters:
      - in: query
        name: query
        description: Filter. e.g. col1:v1,col2:v2 ...
        type: string
      - in: query
        name: fields
        description: Fields returned. e.g. col1,col2 ...
        type: string
      - in: query
        name: sortby
        description: Sorted-by fields. e.g. col1,col2 ...
        type: string
      - in: query
        name: order
        description: Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...
        type: string
      - in: query
        name: limit
        description: Limit the size of result set. Must be an integer
        type: string
      - in: query
        name: offset
        description: Start position of result set. Must be an integer
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.Campo'
        "403":
          description: ""
    post:
      tags:
      - campo
      description: create Campo
      operationId: CampoController.Post
      parameters:
      - in: body
        name: body
        description: body for Campo content
        required: true
        schema:
          $ref: '#/definitions/models.Campo'
      responses:
        "201":
          description: '{int} models.Campo'
        "403":
          description: body is empty
  /campo/{id}:
    get:
      tags:
      - campo
      description: get Campo by id
      operationId: CampoController.Get One
      parameters:
      - in: path
        name: id
        description: The key for staticblock
        required: true
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.Campo'
        "403":
          description: :id is empty
    put:
      tags:
      - campo
      description: update the Campo
      operationId: CampoController.Put
      parameters:
      - in: path
        name: id
        description: The id you want to update
        required: true
        type: string
      - in: body
        name: body
        description: body for Campo content
        required: true
        schema:
          $ref: '#/definitions/models.Campo'
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.Campo'
        "403":
          description: :id is not int
    delete:
      tags:
      - campo
      description: delete the Campo
      operationId: CampoController.Delete
      parameters:
      - in: path
        name: id
        description: The id you want to delete
        required: true
        type: string
      responses:
        "200":
          description: '{string} delete success!'
        "403":
          description: id is empty
  /formulario/:
    get:
      tags:
      - formulario
      description: get Formulario
      operationId: FormularioController.Get All
      parameters:
      - in: query
        name: query
        description: Filter. e.g. col1:v1,col2:v2 ...
        type: string
      - in: query
        name: fields
        description: Fields returned. e.g. col1,col2 ...
        type: string
      - in: query
        name: sortby
        description: Sorted-by fields. e.g. col1,col2 ...
        type: string
      - in: query
        name: order
        description: Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...
        type: string
      - in: query
        name: limit
        description: Limit the size of result set. Must be an integer
        type: string
      - in: query
        name: offset
        description: Start position of result set. Must be an integer
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.Formulario'
        "403":
          description: ""
    post:
      tags:
      - formulario
      description: create Formulario
      operationId: FormularioController.Post
      parameters:
      - in: body
        name: body
        description: body for Formulario content
        required: true
        schema:
          $ref: '#/definitions/models.Formulario'
      responses:
        "201":
          description: '{int} models.Formulario'
        "403":
          description: body is empty
  /formulario/{id}:
    get:
      tags:
      - formulario
      description: get Formulario by id
      operationId: FormularioController.Get One
      parameters:
      - in: path
        name: id
        description: The key for staticblock
        required: true
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.Formulario'
        "403":
          description: :id is empty
    put:
      tags:
      - formulario
      description: update the Formulario
      operationId: FormularioController.Put
      parameters:
      - in: path
        name: id
        description: The id you want to update
        required: true
        type: string
      - in: body
        name: body
        description: body for Formulario content
        required: true
        schema:
          $ref: '#/definitions/models.Formulario'
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.Formulario'
        "403":
          description: :id is not int
    delete:
      tags:
      - formulario
      description: delete the Formulario
      operationId: FormularioController.Delete
      parameters:
      - in: path
        name: id
        description: The id you want to delete
        required: true
        type: string
      responses:
        "200":
          description: '{string} delete success!'
        "403":
          description: id is empty
  /item/:
    get:
      tags:
      - item
      description: get Item
      operationId: ItemController.Get All
      parameters:
      - in: query
        name: query
        description: Filter. e.g. col1:v1,col2:v2 ...
        type: string
      - in: query
        name: fields
        description: Fields returned. e.g. col1,col2 ...
        type: string
      - in: query
        name: sortby
        description: Sorted-by fields. e.g. col1,col2 ...
        type: string
      - in: query
        name: order
        description: Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...
        type: string
      - in: query
        name: limit
        description: Limit the size of result set. Must be an integer
        type: string
      - in: query
        name: offset
        description: Start position of result set. Must be an integer
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.Item'
        "403":
          description: ""
    post:
      tags:
      - item
      description: create Item
      operationId: ItemController.Post
      parameters:
      - in: body
        name: body
        description: body for Item content
        required: true
        schema:
          $ref: '#/definitions/models.Item'
      responses:
        "201":
          description: '{int} models.Item'
        "403":
          description: body is empty
  /item/{id}:
    get:
      tags:
      - item
      description: get Item by id
      operationId: ItemController.Get One
      parameters:
      - in: path
        name: id
        description: The key for staticblock
        required: true
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.Item'
        "403":
          description: :id is empty
    put:
      tags:
      - item
      description: update the Item
      operationId: ItemController.Put
      parameters:
      - in: path
        name: id
        description: The id you want to update
        required: true
        type: string
      - in: body
        name: body
        description: body for Item content
        required: true
        schema:
          $ref: '#/definitions/models.Item'
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.Item'
        "403":
          description: :id is not int
    delete:
      tags:
      - item
      description: delete the Item
      operationId: ItemController.Delete
      parameters:
      - in: path
        name: id
        description: The id you want to delete
        required: true
        type: string
      responses:
        "200":
          description: '{string} delete success!'
        "403":
          description: id is empty
  /item_campo/:
    get:
      tags:
      - item_campo
      description: get ItemCampo
      operationId: ItemCampoController.Get All
      parameters:
      - in: query
        name: query
        description: Filter. e.g. col1:v1,col2:v2 ...
        type: string
      - in: query
        name: fields
        description: Fields returned. e.g. col1,col2 ...
        type: string
      - in: query
        name: sortby
        description: Sorted-by fields. e.g. col1,col2 ...
        type: string
      - in: query
        name: order
        description: Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...
        type: string
      - in: query
        name: limit
        description: Limit the size of result set. Must be an integer
        type: string
      - in: query
        name: offset
        description: Start position of result set. Must be an integer
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.ItemCampo'
        "403":
          description: ""
    post:
      tags:
      - item_campo
      description: create ItemCampo
      operationId: ItemCampoController.Post
      parameters:
      - in: body
        name: body
        description: body for ItemCampo content
        required: true
        schema:
          $ref: '#/definitions/models.ItemCampo'
      responses:
        "201":
          description: '{int} models.ItemCampo'
        "403":
          description: body is empty
  /item_campo/{id}:
    get:
      tags:
      - item_campo
      description: get ItemCampo by id
      operationId: ItemCampoController.Get One
      parameters:
      - in: path
        name: id
        description: The key for staticblock
        required: true
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.ItemCampo'
        "403":
          description: :id is empty
    put:
      tags:
      - item_campo
      description: update the ItemCampo
      operationId: ItemCampoController.Put
      parameters:
      - in: path
        name: id
        description: The id you want to update
        required: true
        type: string
      - in: body
        name: body
        description: body for ItemCampo content
        required: true
        schema:
          $ref: '#/definitions/models.ItemCampo'
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.ItemCampo'
        "403":
          description: :id is not int
    delete:
      tags:
      - item_campo
      description: delete the ItemCampo
      operationId: ItemCampoController.Delete
      parameters:
      - in: path
        name: id
        description: The id you want to delete
        required: true
        type: string
      responses:
        "200":
          description: '{string} delete success!'
        "403":
          description: id is empty
  /plantilla/:
    get:
      tags:
      - plantilla
      description: get Plantilla
      operationId: PlantillaController.Get All
      parameters:
      - in: query
        name: query
        description: Filter. e.g. col1:v1,col2:v2 ...
        type: string
      - in: query
        name: fields
        description: Fields returned. e.g. col1,col2 ...
        type: string
      - in: query
        name: sortby
        description: Sorted-by fields. e.g. col1,col2 ...
        type: string
      - in: query
        name: order
        description: Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...
        type: string
      - in: query
        name: limit
        description: Limit the size of result set. Must be an integer
        type: string
      - in: query
        name: offset
        description: Start position of result set. Must be an integer
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.Plantilla'
        "403":
          description: ""
    post:
      tags:
      - plantilla
      description: create Plantilla
      operationId: PlantillaController.Post
      parameters:
      - in: body
        name: body
        description: body for Plantilla content
        required: true
        schema:
          $ref: '#/definitions/models.Plantilla'
      responses:
        "201":
          description: '{int} models.Plantilla'
        "403":
          description: body is empty
  /plantilla/{id}:
    get:
      tags:
      - plantilla
      description: get Plantilla by id
      operationId: PlantillaController.Get One
      parameters:
      - in: path
        name: id
        description: The key for staticblock
        required: true
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.Plantilla'
        "403":
          description: :id is empty
    put:
      tags:
      - plantilla
      description: update the Plantilla
      operationId: PlantillaController.Put
      parameters:
      - in: path
        name: id
        description: The id you want to update
        required: true
        type: string
      - in: body
        name: body
        description: body for Plantilla content
        required: true
        schema:
          $ref: '#/definitions/models.Plantilla'
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.Plantilla'
        "403":
          description: :id is not int
    delete:
      tags:
      - plantilla
      description: delete the Plantilla
      operationId: PlantillaController.Delete
      parameters:
      - in: path
        name: id
        description: The id you want to delete
        required: true
        type: string
      responses:
        "200":
          description: '{string} delete success!'
        "403":
          description: id is empty
  /respuesta/:
    get:
      tags:
      - respuesta
      description: get Respuesta
      operationId: RespuestaController.Get All
      parameters:
      - in: query
        name: query
        description: Filter. e.g. col1:v1,col2:v2 ...
        type: string
      - in: query
        name: fields
        description: Fields returned. e.g. col1,col2 ...
        type: string
      - in: query
        name: sortby
        description: Sorted-by fields. e.g. col1,col2 ...
        type: string
      - in: query
        name: order
        description: Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...
        type: string
      - in: query
        name: limit
        description: Limit the size of result set. Must be an integer
        type: string
      - in: query
        name: offset
        description: Start position of result set. Must be an integer
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.Respuesta'
        "403":
          description: ""
    post:
      tags:
      - respuesta
      description: create Respuesta
      operationId: RespuestaController.Post
      parameters:
      - in: body
        name: body
        description: body for Respuesta content
        required: true
        schema:
          $ref: '#/definitions/models.Respuesta'
      responses:
        "201":
          description: '{int} models.Respuesta'
        "403":
          description: body is empty
  /respuesta/{id}:
    get:
      tags:
      - respuesta
      description: get Respuesta by id
      operationId: RespuestaController.Get One
      parameters:
      - in: path
        name: id
        description: The key for staticblock
        required: true
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.Respuesta'
        "403":
          description: :id is empty
    put:
      tags:
      - respuesta
      description: update the Respuesta
      operationId: RespuestaController.Put
      parameters:
      - in: path
        name: id
        description: The id you want to update
        required: true
        type: string
      - in: body
        name: body
        description: body for Respuesta content
        required: true
        schema:
          $ref: '#/definitions/models.Respuesta'
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.Respuesta'
        "403":
          description: :id is not int
    delete:
      tags:
      - respuesta
      description: delete the Respuesta
      operationId: RespuestaController.Delete
      parameters:
      - in: path
        name: id
        description: The id you want to delete
        required: true
        type: string
      responses:
        "200":
          description: '{string} delete success!'
        "403":
          description: id is empty
  /seccion/:
    get:
      tags:
      - seccion
      description: get Seccion
      operationId: SeccionController.Get All
      parameters:
      - in: query
        name: query
        description: Filter. e.g. col1:v1,col2:v2 ...
        type: string
      - in: query
        name: fields
        description: Fields returned. e.g. col1,col2 ...
        type: string
      - in: query
        name: sortby
        description: Sorted-by fields. e.g. col1,col2 ...
        type: string
      - in: query
        name: order
        description: Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...
        type: string
      - in: query
        name: limit
        description: Limit the size of result set. Must be an integer
        type: string
      - in: query
        name: offset
        description: Start position of result set. Must be an integer
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.Seccion'
        "403":
          description: ""
    post:
      tags:
      - seccion
      description: create Seccion
      operationId: SeccionController.Post
      parameters:
      - in: body
        name: body
        description: body for Seccion content
        required: true
        schema:
          $ref: '#/definitions/models.Seccion'
      responses:
        "201":
          description: '{int} models.Seccion'
        "403":
          description: body is empty
  /seccion/{id}:
    get:
      tags:
      - seccion
      description: get Seccion by id
      operationId: SeccionController.Get One
      parameters:
      - in: path
        name: id
        description: The key for staticblock
        required: true
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.Seccion'
        "403":
          description: :id is empty
    put:
      tags:
      - seccion
      description: update the Seccion
      operationId: SeccionController.Put
      parameters:
      - in: path
        name: id
        description: The id you want to update
        required: true
        type: string
      - in: body
        name: body
        description: body for Seccion content
        required: true
        schema:
          $ref: '#/definitions/models.Seccion'
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.Seccion'
        "403":
          description: :id is not int
    delete:
      tags:
      - seccion
      description: delete the Seccion
      operationId: SeccionController.Delete
      parameters:
      - in: path
        name: id
        description: The id you want to delete
        required: true
        type: string
      responses:
        "200":
          description: '{string} delete success!'
        "403":
          description: id is empty
definitions:
  models.Campo:
    title: Campo
    type: object
    properties:
      Activo:
        type: boolean
      CampoPadreId:
        type: integer
        format: int64
      FechaCreacion:
        type: string
      FechaModificacion:
        type: string
      Id:
        type: integer
        format: int64
      Nombre:
        type: string
      TipoCampoId:
        type: integer
        format: int64
      Valor:
        type: integer
        format: int64
  models.Formulario:
    title: Formulario
    type: object
    properties:
      Activo:
        type: boolean
      EspacioAcademicoId:
        type: integer
        format: int64
      EvaluadoId:
        type: integer
        format: int64
      FechaCreacion:
        type: string
      FechaModificacion:
        type: string
      Id:
        type: integer
        format: int64
      PeriodoId:
        type: integer
        format: int64
      ProyectoCurricularId:
        type: integer
        format: int64
      TerceroId:
        type: integer
        format: int64
  models.Item:
    title: Item
    type: object
    properties:
      Activo:
        type: boolean
      FechaCreacion:
        type: string
      FechaModificacion:
        type: string
      Id:
        type: integer
        format: int64
      Nombre:
        type: string
      Orden:
        type: integer
        format: int64
  models.ItemCampo:
    title: ItemCampo
    type: object
    properties:
      Activo:
        type: boolean
      CampoId:
        $ref: '#/definitions/models.Campo'
      FechaCreacion:
        type: string
      FechaModificacion:
        type: string
      Id:
        type: integer
        format: int64
      ItemId:
        $ref: '#/definitions/models.Item'
      Porcentaje:
        type: number
        format: double
  models.Plantilla:
    title: Plantilla
    type: object
    properties:
      Activo:
        type: boolean
      EstructuraId:
        type: string
      FechaCreacion:
        type: string
      FechaModificacion:
        type: string
      Id:
        type: integer
        format: int64
      ItemId:
        $ref: '#/definitions/models.Item'
      ProcesoId:
        type: integer
        format: int64
      SeccionId:
        $ref: '#/definitions/models.Seccion'
  models.PlantillaRespuesta:
    title: PlantillaRespuesta
    type: object
  models.Respuesta:
    title: Respuesta
    type: object
    properties:
      Activo:
        type: boolean
      FechaCreacion:
        type: string
      FechaModificacion:
        type: string
      Id:
        type: integer
        format: int64
      Metadata:
        type: string
  models.Seccion:
    title: Seccion
    type: object
    properties:
      Activo:
        type: boolean
      FechaCreacion:
        type: string
      FechaModificacion:
        type: string
      Id:
        type: integer
        format: int64
      Nombre:
        type: string
      Orden:
        type: integer
        format: int64
tags:
- name: seccion
  description: |
    SeccionController operations for Seccion
- name: plantilla
  description: |
    PlantillaController operations for Plantilla
- name: item
  description: |
    ItemController operations for Item
- name: item_campo
  description: |
    ItemCampoController operations for ItemCampo
- name: campo
  description: |
    CampoController operations for Campo
- name: formulario
  description: |
    FormularioController operations for Formulario
- name: respuesta
  description: |
    RespuestaController operations for Respuesta
